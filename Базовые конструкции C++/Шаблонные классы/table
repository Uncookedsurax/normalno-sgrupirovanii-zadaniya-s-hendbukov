#include<vector>

template <typename T>
class Table 
{
private:
	std::vector<std::vector<T>> data;
public:
	Table(size_t a, size_t b) {
		resize(a, b);
	}
	

	const std::vector<T>& operator [] ( size_t i) const {
	return data[i];
}
	std::vector<T>& operator [] ( size_t i) {
	return data[i];
}
	void resize(size_t a, size_t b) {
		data.resize(a);
		for (size_t i = 0; i < a; ++i) {
			data[i].resize(b);
		}
	}

	std::pair<size_t, size_t>size() const {
		if (data.empty()) {
			return { 0,0 };
		}
		else {
			return { data.size(),data[0].size() };
		}
	}
};
